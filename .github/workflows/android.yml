# File: .github/workflows/android.yml

name: Android CI

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '22'
          cache: gradle

      # Cache Gradle packages
      # - name: Cache Gradle packages
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-

      # Build the project
      - name: Build with Gradle
        run: ./gradlew build
      
      # Run Lint Checks on main branch
      - name: Run Lint Checks
        if: github.ref == 'refs/heads/main'
        run: ./gradlew lint

      # Run Unit Tests
      # All tests on main, subset on other branches
      # - name: Run Unit Tests
      #   run: |
      #     if [ "${{ github.ref }}" == "refs/heads/main" ]; then
      #       ./gradlew test
      #     else
      #       ./gradlew test --tests "com.example.package.SubsetTestClass*"
      #     fi

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # Run Instrumentation Tests
      # All tests on main, subset on other branches
      # - name: Run Instrumentation Tests
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: 30
      #     target: default
      #     arch: x86_64
      #     script: |
      #       if [ "${{ github.ref }}" == "refs/heads/main" ]; then
      #         ./gradlew connectedAndroidTest
      #       else
      #         ./gradlew connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=com.example.package.SubsetInstrumentedTest
      #       fi

      # Send notification to Discord
      - name: Send notification to Discord
        if: always()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            STATUS="Success"
            COLOR="3066993"
          else
            STATUS="Failed"
            COLOR="15158332"
          fi

          BRANCH_NAME=${GITHUB_REF##*/}
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          AUTHOR_NAME=$(git log -1 --pretty=%an)

          PAYLOAD=$(cat <<EOF
          {
            "username": "GitHub Actions",
            "embeds": [{
              "title": "Regression $STATUS",
              "color": $COLOR,
              "fields": [
                {
                  "name": "Repository",
                  "value": "${{ github.repository }}",
                  "inline": false
                },
                {
                  "name": "Branch",
                  "value": "$BRANCH_NAME",
                  "inline": false
                },
                {
                  "name": "Commit",
                  "value": "${{ github.sha }}",
                  "inline": false
                },
                {
                  "name": "Author",
                  "value": "$AUTHOR_NAME",
                  "inline": false
                },
                {
                  "name": "Message",
                  "value": "$COMMIT_MESSAGE",
                  "inline": false
                }
              ],
              "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }]
          }
          EOF
          )

          curl -X POST -H "Content-Type: application/json" -d "$PAYLOAD" "$DISCORD_WEBHOOK_URL"
